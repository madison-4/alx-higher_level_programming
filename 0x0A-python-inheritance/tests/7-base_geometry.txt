=====================================

### Tests for the integr validator

====================================

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("my_int", 0)
Traceback (most recent call last):
...
ValueError: my_int must be greater than 0
>>> bg.integer_validator("my_int", -12)
Traceback (most recent call last):
...
ValueError: my_int must be greater than 0
>>> bg.integer_validator("my_int", '12')
Traceback (most recent call last):
...
TypeError: my_int must be an integer
>>> bg.integer_validator("my_int", [12])
Traceback (most recent call last):
...
TypeError: my_int must be an integer
>>> bg.integer_validator("my_int", 12.98)
Traceback (most recent call last):
...
TypeError: my_int must be an integer
>>> bg.integer_validator("my_int", float('inf'))
Traceback (most recent call last):
...
TypeError: my_int must be an integer
>>> bg.integer_validator("my_int", (98,))
Traceback (most recent call last):
...
TypeError: my_int must be an integer
>>> bg.integer_validator("my_int", {78, 87})
Traceback (most recent call last):
...
TypeError: my_int must be an integer
>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented
>>> bg.area(98)
Traceback (most recent call last):
...
TypeError: area() takes 1 positional argument but 2 were given
>>> bg.integer_validator("age", True)
Traceback (most recent call last):
...
TypeError: age must be an integer
>>> bg.integer_validator("my_int", None)
Traceback (most recent call last):
...
TypeError: my_int must be an integer
>>> bg.integer_validator("age")
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'
>>> bg.integer_validator()
Traceback (most recent call last):
...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
